language: python

python:
  - "2.7"
  - "3.5"
  - "3.6"

sudo: false

before_install:
  # Install miniconda
  # -----------------
  - export CONDA_BASE=http://repo.continuum.io/miniconda/Miniconda
  - wget ${CONDA_BASE}3-3.7.0-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

  # Setup conda
  # ------------------------------------
  - conda config --set always_yes yes --set changeps1 no
  - conda config --set show_channel_urls True
  - conda config --add create_default_packages pip
  - conda update --quiet conda

  # Add 3rd party channels
  # ------------------------------------
  - conda config --add channels conda-forge
  - conda config --add channels axiom-data-science

  # Create our environment
  # ------------------------------------
  - ENV_NAME='test-environment'
  - conda create --quiet -n $ENV_NAME python=$TRAVIS_PYTHON_VERSION
  - source activate $ENV_NAME

  # Install testing requirements
  # ------------------------------------
  - conda install --file requirements.txt pytest
  - conda list --export

install:
  - python setup.py sdist && version=$(python setup.py --version) && pushd dist && pip install gdam-${version}.tar.gz && popd

script:
  - py.test -s -rxs -v

after_success:
  - if [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_TAG" != "" ]; then
    conda install -n root conda-build anaconda-client &&
    conda build conda-recipe --python $TRAVIS_PYTHON_VERSION &&
    anaconda -t $ANACONDA_TOKEN upload --force -u axiom-data-science $HOME/miniconda/**/gdam-*.tar.bz2;
    fi

deploy:
  provider: releases
  api_key:
    secure: EtV7nLqv4VMKvocHNdZMt+4YQJ/YN/y4vDNGGrtA10Hlg0E/TY7K7BFU5so3JATgkwzSIp62+7HaWy/8emSxA5q+h+kSswSlVxBWjcO/F9kP6FGHyjnQPFdEFWiwbTqJWkL+Xl8dyj6m4vM2p9EOXY8zewV+cDUufzlzr4m25XHM5j2cwtnlAdqA3Z9lyNrV1jzEBlshjw92mD7fB3c71UgmlSBQmY5h1/z4ZXFpoC3nfCKUHGPXJD3emGlkUr5/XJJfyzBtMdcKJtVxN3R193aH69SjbxUXnNZN0uXrjE8lsVLAV/T4DqIEx0pJIIXQWnji1vc4GDqiDLm37XIaIsVWrk3PGHIkt+jSgLjWXU/KeMYrPuy7YMsDuJ7ix8HQPka1iglLai9FzG6uVdxXqV9nZjMMVEze2b3TUzvGg5hpzC7vIXJnI4+WStpNnStLjcu0Izq1m2PB6izA1oLUoh4FPogVWm8nNdG9oAIytYvyqnllmOyM42RANNzXOt9p/mRN40vCSUezEKuBV1GNqNfWEkeqD/BUGi0ewpC64avnWbGGb072lO0T/7ffI+xxVoM3wsiLCDyy/odYjBnRbwQXThyPZlHiy6AZwc8FKPEsbbMQa65sPfbaQfObQoYQH06Y2zQIsKn8BYwcvJQrlKpjslOyeY1e2SjAAZquavE=
  on:
    tags: true
